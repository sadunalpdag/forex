import time
from bs4 import BeautifulSoup
from urllib.request import urlopen
import algo_forex as slpmv
import sendmail as sendmail
from datetime import datetime
import TELEGRAM as tele
import write_file as intofile
import moving_average as moving



anc = 0

print(type(anc))
a4c = 0
data = [1, 10, 4, 6, 7,8,9,3333,55]
data_moving =[]
timeseries = []
timeseries4saat = []
data_moving4saat_5 = []
data_moving4saat_10 =[]
data4_saat = []


print (len(data))



print (a4c)

def executeSomething():

    global anc
    global a4c

    global data_moving4saat

    abc=0
    xyz=0
    oldabc=0
    abcstr=0
    oldxyz=0
    xyzstr=0
    yon=0
    msg=0
    yon2=0
    mesaj=0
    m=0
    m1=0
    m2=0
    slope22=0
    slope2=0





    quote_page = 'https://markets.businessinsider.com/commodities/gold-price'
    page = urlopen(quote_page)
    soup = BeautifulSoup(page, 'html.parser')

    instructions = soup.find("div", {"data-field": "Mid"})
    time2 = soup.find("div", {"data-field": "MidTimestamp"})

    print(time2.get_text(strip=True))


    print(instructions.get_text(strip=True))

    oldabc = (instructions.get_text(strip=True))

    abcstr = oldabc.replace(",", "")

    print(abcstr)

    abc = float(abcstr)
    print (type(abc))



    now = datetime.now()
    datelim = now.strftime("%w")
    print (datelim)
    if datelim == ("0") or datelim ==("6"):
        print("sistem haftasonu")
        time.sleep(172800)


    else:
        time.sleep(10)

    instructions = 0
    instructions1 = 0
    quote_page = 'https://markets.businessinsider.com/commodities/gold-price'
    page = urlopen(quote_page)
    soup = BeautifulSoup(page, 'html.parser')

    instructions1 = soup.find("div", {"data-field": "Mid"})
    time3 = soup.find("div", {"data-field": "MidTimestamp"})

    oldxyz = (instructions1.get_text(strip=True))

    xyzstr = oldxyz.replace(",", "")

    print(xyzstr)

    xyz = float(xyzstr)
    print(type(xyz))

    if anc >=0:

        print(anc)
        anc = len(data)
        data.insert(anc, xyz)
        intofile.write_file(data,"gold.txt")
        print(data, "data")
        print(anc)

    data_4saat = data[0::2]
    print (data_4saat, "4saat")


    print(anc)

    print (type(a4c))


    if anc % 2 ==0:
         slope22, m1 = moving.movingaverage(5,"gold_data_moving_4saat.txt", data_4saat, data_moving4saat_5)



         slope2, m2 = moving.movingaverage(10, "gold_data_moving_4saat_10.txt", data_4saat, data_moving4saat_10)


         print (m1,"m1")
         print (m2,"m2")
         print (slope2,"slope10")





    else:
         print ("olmadı")
         slope = 0


    fark_yon = xyz - m1
    print (fark_yon,"m1")
    fark_yon = xyz - m2
    print(fark_yon, "m2")

    yon = slpmv.slopeandmovingaveragelimit(slope1 = slope22, fark_yon1 = fark_yon)




    print(yon,"yonfonksiyondan gelen")


    yon2 = str(yon)
    print(type(yon2))
    print (yon2, "yon2")

    mesaj = yon2,m1 ,slope22,"altin"
    mesaj = str(mesaj)
   # tele.telegram_bot_sendtext(bot_message=mesaj)
    print (mesaj)


    print(anc)


    print(type(xyz))
    print(time3.get_text(strip=True))
    print(instructions1.get_text(strip=True))
    fark = abc - xyz
    print(fark,"fark")


    if abc==xyz:
        print(abc,"if icinde")
        print(xyz,"if icinde")
        print ("degerler aynı")


    else:
        print ("degerler farklı")
        print(abc, "if icinde")
        print(xyz, "if icinde")

    if yon2 == "yonortada":
        print("yonortada mail yok")

    else:
        sendmail.sendmail(message = mesaj, passwd ='271145nazan')



while True:

    executeSomething()
    anc +=1
